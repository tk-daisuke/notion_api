// Mocks generated by Mockito 5.0.16 from annotations
// in notion_api/test/unit/notion/mock/notion_mock_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:notion_api/item/model/todo.dart' as _i4;
import 'package:notion_api/item/repository/notion_repository.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [NotionRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotionRepository extends _i1.Mock implements _i2.NotionRepository {
  MockNotionRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Todo>?> fetchNotion() =>
      (super.noSuchMethod(Invocation.method(#fetchNotion, []),
              returnValue: Future<List<_i4.Todo>?>.value())
          as _i3.Future<List<_i4.Todo>?>);
  @override
  List<_i4.Todo>? responseConvert(String? response) =>
      (super.noSuchMethod(Invocation.method(#responseConvert, [response]))
          as List<_i4.Todo>?);
  @override
  String toString() => super.toString();
}
